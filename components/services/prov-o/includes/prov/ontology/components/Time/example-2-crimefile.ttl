@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix prov: <http://www.w3.org/ns/prov-o/> .
@prefix cf: <http://www.example.com/crime#> .
@prefix : <http://www.example.com/crimeFile#> .



#Â Crime File example modified from 
# https://dvcs.w3.org/hg/prov/raw-file/tip/model/ProvenanceModel.html#example-prov-asn-encoding
# not neccessarily matching
# http://dvcs.w3.org/hg/prov/raw-file/tip/ontology/Overview.html#specialization-of-prov-ontology-classes


#processExecution(pe0,create-file,t,,[])
:pe0 a prov:ProcessExecution, cf:FileCreation ;
    prov:startedAt :t .

# NOTE: 't+1' is just an identifier in PROV-ASN - it has no mathematical
# meaning, ordering, etc. We'll here use :t1, etc. instead.

#processExecution(pe1,add-crime-in-london,t+1,,[])
:pe1 a prov:ProcessExecution, cf:FileAppending ;
    prov:startedAt :t1 .

#processExecution(pe2,email,t+2,,[])
:pe2 a prov:ProcessExecution, cf:Emailing ;
    prov:startedAt :t2 .

#processExecution(pe3,edit-London-New-York,t+3,,[])
:pe3 a prov:ProcessExecution, cf:FileEditing ;
    prov:startedAt :t3 .

#processExecution(pe4,email,t+4,,[])
:pe4 a prov:ProcessExecution, cf:Emailing ;
    prov:startedAt :t4 .

#processExecution(pe5,spellcheck,,,[])
:pe5 a prov:ProcessExecution, cf:SpellChecking ;
    prov:recipe :spellcheck .


# The rest of the crime file example, wasGeneratedBy(), used(), etc does not specify any times.

