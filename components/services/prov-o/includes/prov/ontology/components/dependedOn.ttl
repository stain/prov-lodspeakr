@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix prov: <http://www.w3.org/ns/prov-o/> .

prov:dependedOn
   a owl:ObjectProperty;
   rdfs:seeAlso <http://dvcs.w3.org/hg/prov/raw-file/default/model/ProvenanceModel.html#expression-Derivation>;
   rdfs:domain prov:Entity;
   rdfs:range  prov:Entity; 
   rdfs:comment "dependedOn(e2, e1) : e1 is an entity expression, which represents the characterized thing that the derivation __relies upon__. ";
   rdfs:comment "dependedOn(e2, e1) : e2 is entity expression, which represents the characterized thing that is the __result__ of the derivation.";
   rdfs:comment "dependedOn(e2, e1) : :e2 prov:dependedOn :e1";
   rdfs:comment "If dependedOn(e3,e2) and dependedOn(e2,e1) hold, then dependedOn(e3,e1) holds.";


   rdfs:seeAlso <http://www.w3.org/TR/2011/WD-prov-dm-20111018/#transitive-derivation-expression>;
   rdfs:comment "The expression dependedOn can only be inferred; in other words, it cannot be asserted. It is transitive by definition and relies on the previously defined derivation assertions for its base case.";
   rdfs:comment "If dependedOn(e3,e2) and dependedOn(e2,e1) hold, then dependedOn(e3,e1) holds.";
   a owl:TransitiveProperty;
.

prov:wasDerivedFrom

   rdfs:seeAlso <http://www.w3.org/TR/2011/WD-prov-dm-20111018/#transitive-derivation-expression>;
   rdfs:comment "If wasDerivedFrom(e2,e1) or wasDerivedFrom(e2,e1,pe,q2,q1) holds, then dependedOn(e2,e1) holds.";
   rdfs:subPropertyOf prov:dependsOn;

   rdfs:seeAlso <http://www.w3.org/TR/2011/WD-prov-dm-20111018/#transitive-derivation-expression>;
   rdfs:comment "If wasEventuallyDerivedFrom(e2,e1) holds, then dependedOn(e2,e1) holds.";
   rdfs:subPropertyOf prov:wasEventuallyDerivedFrom;
.
