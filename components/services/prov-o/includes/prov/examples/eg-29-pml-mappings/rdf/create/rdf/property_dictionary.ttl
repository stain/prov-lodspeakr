@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix pmlp: <http://inference-web.org/2.0/pml-provenance.owl#> .
@prefix pmlj: <http://inference-web.org/2.0/pml-justification.owl#> .
@prefix pmlt: <http://inference-web.org/2.0/pml-trust.owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix :     <http://example.com/> .

:e1 a pmlp:Information .

:c  a prov:Mapping .

:c1NS a pmlj:NodeSet;
   pmlj:isConsequentOf [
      a pmlj:InferenceStep;
      pmlj:hasAntecedentList ([
          a pmlj:NodeSet;
          pmlj:hasConclusion :c1;
      ]);
      pmlj:hasInferenceRule prov:Insertion;
   ];
   pmlj:hasConclusion :c1;
.
   
# This itself isn't mappable since Mapping only maps strings to strings.
:c1 a prov:Mapping;
   prov:derivedByInsertionFrom :c;
   prov:qualifiedInsertion [ 
      a prov:Insertion;
      prov:dictionary :c;
      prov:inserted [ 
         a prov:KeyValuePair;
         prov:key   "k1"^^xsd:string;
         prov:value :e1;
      ];
   ]; 
. 
